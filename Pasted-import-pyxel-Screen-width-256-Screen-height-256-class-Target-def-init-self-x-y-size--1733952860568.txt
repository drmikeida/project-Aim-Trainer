import pyxel
Screen_width = 256
Screen_height = 256
class Target:
    def __init__(self, x, y, size, color):
        self.x = x
        self.y = y
        self.size = size
        self.color = color
        self.alive = True  
        pyxel.load("my_resource.pyxres")
    
        
    def update(self):
        # Implement target movement logic here (if applicable)
        pass
    def draw(self):
        if self.alive:
            #pyxel.circ(self.x, self.y, self.size, self.color)
            pyxel.blt(self.x, self.y, 0, 0, 0, 16, 16, 0)
    def check_hit(self, player_x, player_y):
        # Check if the click is within the target's bounds
        if self.x <= player_x <= self.x + 16 and self.y <= player_y <= self.y + 16:
            self.alive = False
            return True
        return False
class App:
    def __init__(self):
        pyxel.init(Screen_width, Screen_height, title="Aim Trainer", capture_scale=1)
        pyxel.mouse(True)
        self.targets = []
        self.score = 0
        pyxel.run(self.update, self.draw)
    def update(self):
        if pyxel.btnp(pyxel.KEY_Q):
            pyxel.quit()
        # Target generation logic (replace with your preferred method)
        if pyxel.frame_count % 30 == 0:  # Generate a target every 30 frames
            self.targets.append(Target(
                pyxel.rndf(10, Screen_width - 10),
                pyxel.rndf(10, Screen_height - 10),
                pyxel.rndf(5, 15),
                pyxel.rndi(1, 15)
            ))
        # Remove hit targets
        for i in range(len(self.targets) - 1, -1, -1):
            if not self.targets[i].alive:
                del self.targets[i]
        # Handle player shot
        if pyxel.btnp(pyxel.MOUSE_BUTTON_LEFT):
            player_x = pyxel.mouse_x
            player_y = pyxel.mouse_y
            for target in self.targets:
                if target.check_hit(player_x, player_y):
                    self.score += 1
    def draw(self):
        pyxel.cls(0)
        # Draw targets
        for target in self.targets:
            target.draw()
            #pyxel.blt(50, 50, 0, 0, 0, 16, 16, 0)
        # Display score
        pyxel.text(5, 5, f"Score: {self.score}", 7)
App()